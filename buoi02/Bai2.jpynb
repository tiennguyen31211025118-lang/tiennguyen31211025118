{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "087d29ce-0977-45f8-885e-0fd4b3567046",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Writing SoSanh.in1\n"
     ]
    }
   ],
   "source": [
    "%%writefile SoSanh.in1\n",
    "5\n",
    "6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "67f08448-94da-4782-a109-330887d01a46",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Moi ban nhap so a: Moi ban nhap so b: Ket qua so sanh hai so thuc 5.00 va 6.00:\n",
      "5.00     <     6.00:     True\n",
      "5.00     <=     6.00:     True\n",
      "5.00     >     6.00:    False\n",
      "5.00     >=     6.00:    False\n",
      "5.00     ==     6.00:    False\n",
      "5.00     !=     6.00:     True\n"
     ]
    }
   ],
   "source": [
    "!python SoSanh.py < SoSanh.in1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d61a7404-bc89-443c-bfa0-974c53d249a6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Writing Max3Num.in1\n"
     ]
    }
   ],
   "source": [
    "%%writefile Max3Num.in1\n",
    "2\n",
    "5\n",
    "4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ee5d5a6e-8b60-4c23-b263-2d1607576585",
   "metadata": {},
   "outputs": [],
   "source": [
    "os.mkdir('a/a', "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "afc9749f-2566-45fa-a080-9e629551d84b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "71574\n",
      "62025\n",
      "44994\n",
      "Max(71574, 62025, 44994) = 71574\n",
      "Max3Num/input/input01.txt\n",
      "Max3Num/output/output01.txt\n",
      "--------------------------------------------------\n",
      "1694\n",
      "97114\n",
      "78542\n",
      "Max(1694, 97114, 78542) = 97114\n",
      "Max3Num/input/input02.txt\n",
      "Max3Num/output/output02.txt\n",
      "--------------------------------------------------\n",
      "26475\n",
      "56259\n",
      "48355\n",
      "Max(26475, 56259, 48355) = 56259\n",
      "Max3Num/input/input03.txt\n",
      "Max3Num/output/output03.txt\n",
      "--------------------------------------------------\n",
      "66185\n",
      "80083\n",
      "90129\n",
      "Max(66185, 80083, 90129) = 90129\n",
      "Max3Num/input/input04.txt\n",
      "Max3Num/output/output04.txt\n",
      "--------------------------------------------------\n",
      "25277\n",
      "47712\n",
      "32960\n",
      "Max(25277, 47712, 32960) = 47712\n",
      "Max3Num/input/input05.txt\n",
      "Max3Num/output/output05.txt\n",
      "--------------------------------------------------\n",
      "33116\n",
      "45644\n",
      "57670\n",
      "Max(33116, 45644, 57670) = 57670\n",
      "Max3Num/input/input06.txt\n",
      "Max3Num/output/output06.txt\n",
      "--------------------------------------------------\n",
      "61099\n",
      "58663\n",
      "61220\n",
      "Max(61099, 58663, 61220) = 61220\n",
      "Max3Num/input/input07.txt\n",
      "Max3Num/output/output07.txt\n",
      "--------------------------------------------------\n",
      "15466\n",
      "44336\n",
      "30619\n",
      "Max(15466, 44336, 30619) = 44336\n",
      "Max3Num/input/input08.txt\n",
      "Max3Num/output/output08.txt\n",
      "--------------------------------------------------\n",
      "58136\n",
      "9703\n",
      "27662\n",
      "Max(58136, 9703, 27662) = 58136\n",
      "Max3Num/input/input09.txt\n",
      "Max3Num/output/output09.txt\n",
      "--------------------------------------------------\n",
      "33897\n",
      "45800\n",
      "3741\n",
      "Max(33897, 45800, 3741) = 45800\n",
      "Max3Num/input/input10.txt\n",
      "Max3Num/output/output10.txt\n",
      "--------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "import random, os\n",
    "input_dir = 'Max3Num/input'\n",
    "output_dir = 'Max3Num/output'\n",
    "!rm -r $input_dir\n",
    "!rm -r $output_dir\n",
    "os.makedirs(input_dir, exist_ok = True)\n",
    "os.makedirs(output_dir, exist_ok = True)\n",
    "for ti in range(1, 11):\n",
    "    a = random.randint(1, 100000)\n",
    "    b = random.randint(1, 100000)\n",
    "    c = random.randint(1, 100000)\n",
    "    with open('Max3Num.txt', 'w') as file:\n",
    "        file.write(str(a) + '\\n')\n",
    "        file.write(str(b) + '\\n')\n",
    "        file.write(str(c) + '\\n')\n",
    "    !python Max3Num.py <Max3Num.txt >Max3Num.out\n",
    "    !cat Max3Num.txt\n",
    "    !cat Max3Num.out\n",
    "    input_path = f'{input_dir}/input{ti:02d}.txt'\n",
    "    output_path = f'{output_dir}/output{ti:02d}.txt'\n",
    "    print(input_path)\n",
    "    print(output_path)\n",
    "    !cp Max3Num.txt $input_path\n",
    "    !cp Max3Num.out $output_path\n",
    "    print(\"-\"*50)\n",
    "    pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c281eaa4-d853-4b5f-9344-7d1c95dd7910",
   "metadata": {},
   "outputs": [],
   "source": [
    "import shutil"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c9db4c4f-b221-4d08-b7b8-7ac139ad0c11",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Max(2, 5, 4) = 5\n"
     ]
    }
   ],
   "source": [
    "!python Max3Num.py <Max3Num.in1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6b5c8516-777f-40f0-ad7b-b7a810a72272",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
